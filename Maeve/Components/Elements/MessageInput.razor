@using Maeve.Database
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<DataContext> DbContextFactory

<div class="flex flex-col gap-2 w-full">
    @if (_documents.Length > 0) {
        <div class="flex justify-end items-center gap-2">
            @if (_useDocument != null) {
                <div class="badge badge-soft badge-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5">
                        <path fill-rule="evenodd" d="M4.5 2A1.5 1.5 0 0 0 3 3.5v13A1.5 1.5 0 0 0 4.5 18h11a1.5 1.5 0 0 0 1.5-1.5V7.621a1.5 1.5 0 0 0-.44-1.06l-4.12-4.122A1.5 1.5 0 0 0 11.378 2H4.5Zm2.25 8.5a.75.75 0 0 0 0 1.5h6.5a.75.75 0 0 0 0-1.5h-6.5Zm0 3a.75.75 0 0 0 0 1.5h6.5a.75.75 0 0 0 0-1.5h-6.5Z" clip-rule="evenodd"/>
                    </svg>

                    @_useDocument.Name

                    <button class="cursor-pointer" @onclick="() => _useDocument = null">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4">
                            <path d="M5.28 4.22a.75.75 0 0 0-1.06 1.06L6.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L8 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L9.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L8 6.94 5.28 4.22Z"/>
                        </svg>
                    </button>
                </div>
            }
            <div class="dropdown dropdown-top dropdown-end">
                <div tabindex="0" role="button" class="btn btn-sm m-1">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-5">
                        <path fill-rule="evenodd" d="M4.5 2A1.5 1.5 0 0 0 3 3.5v13A1.5 1.5 0 0 0 4.5 18h11a1.5 1.5 0 0 0 1.5-1.5V7.621a1.5 1.5 0 0 0-.44-1.06l-4.12-4.122A1.5 1.5 0 0 0 11.378 2H4.5ZM10 8a.75.75 0 0 1 .75.75v1.5h1.5a.75.75 0 0 1 0 1.5h-1.5v1.5a.75.75 0 0 1-1.5 0v-1.5h-1.5a.75.75 0 0 1 0-1.5h1.5v-1.5A.75.75 0 0 1 10 8Z" clip-rule="evenodd"/>
                    </svg>

                    Use document
                </div>
                <div
                    tabindex="0"
                    class="dropdown-content card card-sm bg-base-100 z-1 w-72 shadow-md">
                    <div class="card-body">
                        <div class="overflow-x-auto">
                            <table class="table table-sm table-zebra">
                                @foreach (var document in _documents) {
                                    <tr>
                                        <td>
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"/>
                                            </svg>
                                        </td>
                                        <td>
                                            <button class="cursor-pointer" @onclick="() => _useDocument = document">@document.Name</button>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
    <textarea @bind="_query" class="textarea w-full bg-base-100" @bind:event="oninput" @onkeydown="OnKeyDown"></textarea>
</div>

@code {
    
    // - Properties
    
    [Parameter]
    public EventCallback<(string, Document?)> OnSendMessage { get; set; }

    
    // - Private Properties

    private string _query = "";
    private Document[] _documents = [];
    private Document? _useDocument;
    
    
    // - Functions

    protected override async Task OnInitializedAsync() {
        if (!RendererInfo.IsInteractive) return;

        await using var dataContext = await DbContextFactory.CreateDbContextAsync();
        
        _documents = await dataContext.Documents
            .Where(d => d.State == DocumentState.Vectorized)
            .OrderByDescending(d => d.UploadedAt)
            .AsNoTracking()
            .ToArrayAsync();
    }


    // - Private Functions

    private async Task OnKeyDown(KeyboardEventArgs e) {
        if ((e.Code == "Enter" || e.Code == "NumpadEnter") && !e.ShiftKey && _query.Trim() != "") {
            await OnSendMessage.InvokeAsync((_query, _useDocument));
            _query = "";
        }
    }
}
