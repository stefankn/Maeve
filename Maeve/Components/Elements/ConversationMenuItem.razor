@using Maeve.Conversations
@using Message = Maeve.Database.Message
@using Blazor.Heroicons.Solid

@inject IConversationManager ConversationManager

@implements IDisposable

<li>
    <a class="@(Conversation.Id == ConversationManager.FocusedConversation?.Id ? "menu-active" : "") w-full" href="/conversations/@Conversation.Id">
        @if (Conversation.IsResponding) {
            <span class="loading loading-dots loading-md"></span>
        } else {
            <ChatBubbleLeftRightIcon class="size-6"></ChatBubbleLeftRightIcon>
        }

        @Conversation.Title
    </a>
</li>

@code {
    
    // - Properties

    [Parameter, EditorRequired]
    public required IConversationContext Conversation { get; set; }
    
    
    // - Functions

    protected override void OnInitialized() {
        Conversation.OnResponse += OnResponse;
        Conversation.OnNewMessage += OnNewMessage;
    }

    // IDisposable Functions

    public void Dispose() {
        Conversation.OnResponse -= OnResponse;
        Conversation.OnNewMessage -= OnNewMessage;
    }
    
    
    // - Private Functions
    
    private void OnNewMessage(object? sender, Message e) {
        InvokeAsync(StateHasChanged);
    }

    private void OnResponse(object? sender, string? e) {
        InvokeAsync(StateHasChanged);
    }
}
