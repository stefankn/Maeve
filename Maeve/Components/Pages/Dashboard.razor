@page "/"
@using Maeve.Database
@using Maeve.Extensions
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<DataContext> DbContextFactory
@inject NavigationManager NavigationManager

<div class="flex flex-col gap-6 w-full">
    <div>Dashboard</div>
    
    <fieldset class="fieldset">
        <legend class="fieldset-legend">Start a new conversation</legend>
        <MessageInput OnSendMessage="OnSendMessage"></MessageInput>
    </fieldset>
</div>

@code {
    
    // - Private Functions
    
    private async Task OnSendMessage((string, Document?) message) {
        await CreateNewConversation(message.Item1, message.Item2);
    }

    private async Task CreateNewConversation(string query, Document? document) {
        await using var dataContext = await DbContextFactory.CreateDbContextAsync();
        var title = query.Truncate(50);
        
        var conversation = new Database.Conversation {
            Title = title,
            CreatedAt = DateTime.Now,
            UpdatedAt = DateTime.Now
        };
        if (document != null) {
            var systemMessage = new Message {
                Content = $"Use the filename {document.Filename} when using a tool to query a document.",
                CreatedAt = DateTime.Now,
                Role = Role.System
            };
            conversation.Messages.Add(systemMessage);
        }
        
        var message = new Message {
            Content = query,
            CreatedAt = DateTime.Now,
            Role = Role.User
        };
        conversation.Messages.Add(message);
        dataContext.Conversations.Add(conversation);
        await dataContext.SaveChangesAsync();
        
        NavigationManager.NavigateTo($"/conversations/{conversation.Id}");
    }
}
